{"version":3,"sources":["webpack:///./src/components/subnav.js","webpack:///./src/components/sidenav.js","webpack:///./src/components/CodeBlock.js","webpack:///./src/components/ToggleCodeBlock.js","webpack:///./src/components/PaginationLinkPrev.js","webpack:///./src/components/ButtonDropdownWrapper.js","webpack:///./src/templates/mdTemplate.js"],"names":["subnav_Subnav","Subnav","props","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","dropdownOpen","setState","prevState","render","_this$props","files","nameEn","nameFr","path","i18n","sortedFiles","sort","a","b","parseInt","node","frontmatter","subnav","split","react_default","createElement","reactstrap_es","X","className","href","onClick","style","border","font-size","font-family","margin-top","margin-bottom","font-weight","language","C","isOpen","W","map","edges","lang","active","padding-left","gatsby_browser_entry","to","activeStyle","color","backgroundColor","title","Component","components_subnav","Object","es","components_sidenav","query","data","subNameEn","subNameFr","subGroup","subPieces","forEach","push","length","id","role","aria-label","fb","_1251706298","CodeBlock_CodeBlock","CodeBlock","output","defaultOutput","isShowingCode","copyText","changeOutput","copy","n","value","_this2","D","xb","display","B","md","tabs","hb","ib","width","react_copy_to_clipboard_lib","CopyToClipboard","text","html","react","e","position","right","top","size","outline","t","padding-top","lib","PrismCode","propTypes","prop_types_default","string","bool","defaultProps","components_CodeBlock","ToggleCodeBlock_ToggleCodeBlock","ToggleCodeBlock","_CodeBlock","returnButton","height","padding","textAlign","fontSize","fontWeight","marginRight","V","components_ToggleCodeBlock","children","cssModule","object","next","previous","tag","oneOfType","func","PaginationLinkPrev_PaginationLinkPrev","Tag","attributes","objectWithoutProperties_default","classes","utils","classnames_default","ariaLabel","Array","isArray","aria-hidden","key","assign","components_PaginationLinkPrev","ButtonDropdownWrapper_ButtonDropdownWrapper","ButtonDropdownWrapper","f","direction","marginBottom","I","caret","H","G","components_ButtonDropdownWrapper","_ref","eng","fr","renderAst","rehype_react_default","components","helmet","Helmet_default","paginationlinkprev","togglecodeblock","codeblock","mdbuttondropdown","alert","badge","breadcrumb","c","breadcrumbitem","d","button","buttondropdown","buttongroup","g","buttontoolbar","h","card","i","cardblock","j","cardbody","k","cardcolumns","l","carddeck","m","cardfooter","cardgroup","o","cardheader","p","cardimg","q","cardimgoverlay","r","cardlink","s","cardsubtitle","cardtext","u","cardtitle","v","carousel","w","carouselcaption","x","carouselcontrol","y","carouselindicators","z","carouselitem","A","mdcol","collapse","container","custominput","E","dropdown","F","dropdownitem","dropdownmenu","dropdowntoggle","fade","J","form","K","formfeedback","L","formgroup","M","formtext","N","input","O","inputgroup","P","inputgroupaddon","Q","inputgroupbutton","R","inputgroupbuttondropdown","S","inputgrouptext","T","jumbotron","U","label","listgroup","listgroupitem","listgroupitemheading","Y","listgroupitemtext","Z","media","ab","modal","bb","modalbody","cb","modalfooter","db","modalheader","eb","nav","navbar","jb","navbarbrand","kb","navbartoggler","lb","navdropdown","gb","navitem","navlink","pagination","mb","paginationitem","nb","paginationlink","ob","popover","pb","popoverbody","qb","popovercontent","rb","popoverheader","sb","popovertitle","tb","poppercontent","ub","poppertargethelper","vb","progress","wb","row","tabcontent","yb","table","Ab","tabpane","zb","tooltip","Bb","uncontrolledalert","Cb","uncontrolledbuttondropdown","Db","uncontrolledcarousel","Eb","uncontrolledcollapse","Fb","uncontrolleddropdown","Gb","uncontrollednavdropdown","Hb","uncontrolledtooltip","Ib","Compiler","layout","search","lng","placeholder","toggler","htmlAst","pageQuery"],"mappings":"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","file":"component---src-templates-md-template-js-5d79b9a15c745fba12dc.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport {\n\tCollapse,\n\tListGroup,\n\tListGroupItem\n} from 'reactstrap';\nimport { translate } from \"react-i18next\";\nimport './subnav.scss'\n\nclass Subnav extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.toggle = this.toggle.bind(this);\n\t\tthis.state = {\n\t\t\tdropdownOpen: true\n\t\t};\n\t}\n\n\ttoggle() {\n\t\tthis.setState(prevState => ({\n\t\t\tdropdownOpen: !prevState.dropdownOpen\n\t\t}));\n\t}\n\trender() {\n\t\tconst {\n\t\t\tfiles,\n\t\t\tnameEn,\n\t\t\tnameFr,\n\t\t\tpath,\n\t\t\ti18n, } = this.props;\n\n\t\tconst sortedFiles = files.sort((a, b) =>\n\t\t\tparseInt(a.node.frontmatter.subnav.split('/')[3], 10) - parseInt(b.node.frontmatter.subnav.split('/')[3], 10))\n\t\t\t;\n\t\treturn (\n\t\t\t<ListGroupItem className=\"collapseItem\">\n\t\t\t\t<a href=\"#\" onClick={this.toggle} style={{\"border\": \"0px\", \"font-size\":\"1.2125em\", \"font-family\": \"'Nunito Sans', sans-serif\", \"margin-top\": \"5px\", \"margin-bottom\": \"5px\", \"font-weight\": \"600\"}}>{(i18n.language === \"en\") ? nameEn : nameFr}</a>\n\t\t\t\t<Collapse isOpen={this.state.dropdownOpen}>\n\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t{sortedFiles.map((edges) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t((i18n.language === \"en\") && (edges.node.frontmatter.lang === \"en\")) ||\n\t\t\t\t\t\t\t\t((i18n.language === \"fr\") && (edges.node.frontmatter.lang === \"fr\"))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ListGroupItem className=\"subItem\" active={path === edges.node.frontmatter.path} style={{ \"padding-left\": \"2rem\",  \"border\": \"0px\"}}>\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"subLink\"\n\t\t\t\t\t\t\t\t\t\t\tto={edges.node.frontmatter.path}\n\t\t\t\t\t\t\t\t\t\t\tactiveStyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#467B8D\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{edges.node.frontmatter.title}\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Collapse>\n\t\t\t</ListGroupItem>\n\t\t);\n\t}\n}\nexport default translate(\"default\")(Subnav);\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport {\n  Nav,\n} from 'reactstrap';\nimport Subnav from './subnav';\nimport { translate } from \"react-i18next\";\nimport \"./sidenav.scss\"\n\nconst Sidenav = (props) => (\n  <StaticQuery query={graphql`\n        query{\n          component:allMarkdownRemark(\n            filter: {\n              frontmatter: {path: {regex: \"/\\/component\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ){\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          overview:allMarkdownRemark(\n            filter:\n              {frontmatter: {path: {regex: \"/\\/overview\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ){\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          content:allMarkdownRemark(\n            filter:\n            {frontmatter: {path: {regex: \"/\\/content\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ) {\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          identity:allMarkdownRemark(\n            filter: {\n              frontmatter: {path: {regex: \"/\\/identity\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ) {\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          data:allMarkdownRemark(\n            filter: {\n              frontmatter: {path: {regex: \"/\\/data\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ){\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n        }\n    `}\n    render={(data) => {\n\n      let subNameEn = \"\";\n      let subNameFr = \"\";\n      let subGroup = [];\n      let subPieces = [];\n      data[props.path.split(\"/\")[1]].edges.forEach((edges) => {\n        if (edges.node.frontmatter.subnav.split(\"/\")[1] !== subNameEn) {\n          if (subNameEn !== \"\") {\n            subPieces.push(\n              <Subnav\n                files={subGroup}\n                nameEn={subNameEn}\n                nameFr={subNameFr}\n                path={props.path}\n              />\n            );\n          }\n          subGroup = [];\n          subNameEn = edges.node.frontmatter.subnav.split(\"/\")[1];\n          subNameFr = edges.node.frontmatter.subnav.split(\"/\")[2];\n        }\n        subGroup.push(edges);\n      });\n      if (subGroup.push.length !== 0) {\n        subPieces.push(\n          <Subnav\n            files={subGroup}\n            nameEn={subNameEn}\n            nameFr={subNameFr}\n            path={props.path}\n          />\n        );\n      }\n      return (\n        <nav id=\"sidenav\" role=\"navigation\" aria-label=\"Sub Navigation *Translate*\">\n          <Nav style={{'margin-top':'110px', 'margin-bottom':'40px'}}>\n            {subPieces}\n          </Nav>\n        </nav>\n      )\n    }}\n  />\n);\n\nexport default translate(\"default\")(Sidenav);\n","import React from 'react';\nimport { Button, ButtonGroup, Row, Col, Container, Nav, NavItem, NavLink } from 'reactstrap';\nimport 'prismjs';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/themes/prism.css';\nimport { PrismCode } from 'react-prism';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport PropTypes from 'prop-types';\nimport { translate } from \"react-i18next\";\n\n/** Component that holds code in html and react/jsx with the ability to copy the code */\nclass CodeBlock extends React.Component {\n  /**\n   * Take the inputs as well as initialize the needed state.\n   * @param {props} { defaultOutput, html, react, isShowingCode } - The props not counting the i18n props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      output: (this.props.defaultOutput === undefined || this.props.defaultOutput === \"react\") ? \"react\" : \"html\",\n      isShowingCode: this.props.isShowingCode,\n      copyText: \"COPY CODE\"\n    }\n\n    this.changeOutput = this.changeOutput.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  /**\n   * Change the value of the copy button once clicked via this.state.copyText.\n   */\n  copy() {\n    this.setState({ copyText: \"Copied!\" });\n  }\n\n  /**\n   * Change the output of the code box between the supplied values for html and react.\n   * @param {string} value - \"html\" or \"react\"\n   */\n  changeOutput(value) {\n    if (this.state.output !== value) {\n      this.setState({ output: value });\n      if (this.state.copyText === \"Copied!\") {\n        this.setState({ copyText: \"COPY CODE\" });\n      }\n    }\n  }\n\n  /**\n   * Render the codeblock as a bootstrap row (please let Addison know if this is not ideal).\n   * @return {<jsx>} The component.\n   */\n  render() {\n    return (\n      <Container>\n        <Row className=\"codeblock\" style={(this.props.isShowingCode) ? { \"display\": \"flex\" } : { \"display\": \"none\" }}>\n          <Col md=\"12\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                href=\"#\"\n                onClick={() => this.changeOutput(\"react\")}\n                className={(!(this.state.output === \"react\")) ? \"\" : \"active\"}>\n                  React\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                href=\"#\"\n                onClick={() => this.changeOutput(\"html\")}\n                className={(!(this.state.output === \"html\")) ? \"\" : \"active\"}>\n                  HTML\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Col>\n\n          <Col md=\"12\" style={{ \"width\": \"100%\" }}>\n            <CopyToClipboard text={(this.state.output === \"html\") ? this.props.html : this.props.react}>\n              <Button style={{'position':'absolute', 'right':'20px', 'top':'12px'}} color=\"primary\" size=\"sm\" outline onClick={this.copy} className=\"float-right\">\n                {this.props.t(this.state.copyText)}\n              </Button>\n            </CopyToClipboard>\n            <pre style={{'padding-top':'40px'}}>\n              <PrismCode className={(this.state.output === \"html\") ? \"language-html\" : \"language-jsx\"}>\n                {(this.state.output === \"html\") ? this.props.html : this.props.react}\n              </PrismCode>\n            </pre>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\nCodeBlock.propTypes = {\n  defaultOutput: PropTypes.string,\n  html: PropTypes.string,\n  react: PropTypes.string,\n  isShowingCode: PropTypes.bool\n};\n\nCodeBlock.defaultProps = {\n  defaultOutput: \"html\",\n  isShowingCode: true\n}\n\n\nexport default translate(\"CodeBlock\")(CodeBlock);\n","import React from 'react';\nimport { Button, Row, Label, Container } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { translate } from \"react-i18next\";\nimport CodeBlock from './CodeBlock';\n\n/** Component that extends the functionality of CodeBlock by adding the option to hide/show the CodeBlock component */\nclass ToggleCodeBlock extends CodeBlock {\n    /**\n     * Take the inputs as well as initialize the needed state.\n     * @param {props} { defaultOutput, html, react, isShowingCode } - The props not counting the i18n props\n     */\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            isShowingCode: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n        this.returnButton = this.returnButton.bind(this);\n    }\n\n    /**\n     * Toggle between showing the CodeBlock element and not showing the CodeBlock element\n     */\n    toggle() {\n        this.setState(prevState => ({\n            isShowingCode: !prevState.isShowingCode\n        }));\n    }\n\n    /**\n     * Generates the SHOW CODE / HIDE CODE button in order to not cluter the render() code.\n     * @return {<jsx>} The show/hide button and its label\n     */\n    returnButton() {\n        return(\n            <div>\n                <Button \n                    onClick={ this.toggle } \n                    style={ \n                        {\n                            \"width\": \"30px\",\n                            \"height\": \"30px\",\n                            \"padding\": \"0px 0px 5px 0px\",\n                            \"textAlign\": \"center\",\n                            \"fontSize\": \"20px\",\n                            \"fontWeight\": \"900\",\n                            \"marginRight\": \"15px\"\n                        } \n                    } \n                    size=\"sm\"\n                    color=\"info\">\n                    { (this.state.isShowingCode) ? \"-\" : \"+\" }\n                </Button>\n                <Label onClick={ this.toggle } >\n                    { this.props.t((this.state.isShowingCode) ? \"HIDE CODE\" : \"SHOW CODE\") }\n                </Label>\n            </div>\n        );\n    }\n\n    /**\n     * Renders the CodeBlock as well as the SHOW CODE / HIDE CODE button in the correct location.\n     * @return {<jsx>} A CodeBlock element with an associated show/hide button.\n     */\n    render() {\n        return (\n          <Container>\n            <Row>\n                { (!this.state.isShowingCode) ? this.returnButton() : <div></div> }\n                <CodeBlock \n                    html={ this.props.html } \n                    react={ this.props.react } \n                    defaultOutput={ this.props.defaultOutput }\n                    isShowingCode={ this.state.isShowingCode }\n                />\n                { (this.state.isShowingCode) ? this.returnButton() : <div></div> }\n            </Row>\n          </Container>\n        );\n    }\n}\n\nToggleCodeBlock.propTypes = {\n    defaultOutput: PropTypes.string,\n    html: PropTypes.string,\n    react: PropTypes.string,\n    isShowingCode: PropTypes.bool\n}\n\nToggleCodeBlock.defaultProps = {\n    defaultOutput: \"html\",\n    isShowingCode: false\n}\n\nexport default translate(\"CodeBlock\")(ToggleCodeBlock);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from '../../node_modules/reactstrap/src/utils';\n\nconst propTypes = {\n    'aria-label': PropTypes.string,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    cssModule: PropTypes.object,\n    next: PropTypes.bool,\n    previous: PropTypes.bool,\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n};\n\nconst defaultProps = {\n    tag: 'a',\n};\n\nconst PaginationLinkPrev = (props) => {\n    let {\n        className,\n        cssModule,\n        next,\n        previous,\n        tag: Tag,\n        ...attributes\n    } = props;\n\n    const classes = mapToCssModules(classNames(\n        className,\n        'page-link'\n    ), cssModule);\n\n    let defaultAriaLabel = 'Previous';\n\n    const ariaLabel = props['aria-label'] || defaultAriaLabel;\n\n    let defaultCaret = '\\u00ab';\n\n    let children = props.children;\n    if (children && Array.isArray(children) && children.length === 0) {\n        children = null;\n    }\n\n    if (!attributes.href && Tag === 'a') {\n        Tag = 'button';\n    }\n\n    children = [\n        <span\n            aria-hidden=\"true\"\n            key=\"caret\"\n        >\n            {children || defaultCaret}\n        </span>,\n        <span\n            className=\"sr-only\"\n            key=\"sr\"\n        >\n            {ariaLabel}\n        </span>,\n    ];\n\n    return (\n        <Tag\n            {...attributes}\n            className={classes}\n            aria-label={ariaLabel}\n        >\n            {children}\n        </Tag>\n    );\n};\n\nPaginationLinkPrev.propTypes = propTypes;\nPaginationLinkPrev.defaultProps = defaultProps;\n\nexport default PaginationLinkPrev;","import React, { Component } from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { translate } from 'react-i18next';\n\nclass ButtonDropdownWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  render() {\n    return (\n      <ButtonDropdown direction=\"down\" isOpen={this.state.dropdownOpen} toggle={this.toggle} style={{marginBottom: '15px'}} color={this.props.color}>\n        <DropdownToggle caret {...this.props}>\n          Reply\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem>Action 1</DropdownItem>\n          <DropdownItem>Action 2</DropdownItem>\n          <DropdownItem>Action 3</DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n    );\n  }\n}\n\nexport default translate('ButtonDropdownWrapper')(ButtonDropdownWrapper);\n","import React from 'react';\nimport rehypeReact from 'rehype-react';\nimport * as reactstrap from 'reactstrap';\nimport { graphql } from 'gatsby';\nimport { Row, Col, Container, UncontrolledCollapse, Button } from 'reactstrap';\nimport { translate } from 'react-i18next';\n\nimport Sidenav from '../components/sidenav';\nimport Search from '../components/search';\nimport Layout from '../components/layout';\nimport ToggleCodeBlock from '../components/ToggleCodeBlock';\nimport CodeBlock from '../components/CodeBlock';\nimport PaginationLinkPrev from '../components/PaginationLinkPrev';\n/* Import wrappers for embedding state-dependent components in markdown */\nimport ButtonDropdownWrapper from '../components/ButtonDropdownWrapper';\nimport Helmet from 'react-helmet';\n\n\nconst Template = ({\n  data, // this prop will be injected by the GraphQL query below.\n  i18n }) => {\n  const { eng, fr } = data;\n  const { frontmatter: { path } } = eng;\n  const renderAst = new rehypeReact({\n    createElement: React.createElement,\n    components: {\n      helmet: Helmet, paginationlinkprev: PaginationLinkPrev, togglecodeblock: ToggleCodeBlock, codeblock: CodeBlock, mdbuttondropdown: ButtonDropdownWrapper, alert: reactstrap.Alert, badge: reactstrap.Badge, breadcrumb: reactstrap.Breadcrumb, breadcrumbitem: reactstrap.BreadcrumbItem, button: reactstrap.Button, buttondropdown: reactstrap.ButtonDropdown, buttongroup: reactstrap.ButtonGroup, buttontoolbar: reactstrap.ButtonToolbar, card: reactstrap.Card, cardblock: reactstrap.CardBlock, cardbody: reactstrap.CardBody, cardcolumns: reactstrap.CardColumns, carddeck: reactstrap.CardDeck, cardfooter: reactstrap.CardFooter, cardgroup: reactstrap.CardGroup, cardheader: reactstrap.CardHeader, cardimg: reactstrap.CardImg, cardimgoverlay: reactstrap.CardImgOverlay, cardlink: reactstrap.CardLink, cardsubtitle: reactstrap.CardSubtitle, cardtext: reactstrap.CardText, cardtitle: reactstrap.CardTitle, carousel: reactstrap.Carousel, carouselcaption: reactstrap.CarouselCaption, carouselcontrol: reactstrap.CarouselControl, carouselindicators: reactstrap.CarouselIndicators, carouselitem: reactstrap.CarouselItem, mdcol: reactstrap.Col, collapse: reactstrap.Collapse, container: reactstrap.Container, custominput: reactstrap.CustomInput, dropdown: reactstrap.Dropdown, dropdownitem: reactstrap.DropdownItem, dropdownmenu: reactstrap.DropdownMenu, dropdowntoggle: reactstrap.DropdownToggle, fade: reactstrap.Fade, form: reactstrap.Form, formfeedback: reactstrap.FormFeedback, formgroup: reactstrap.FormGroup, formtext: reactstrap.FormText, input: reactstrap.Input, inputgroup: reactstrap.InputGroup, inputgroupaddon: reactstrap.InputGroupAddon, inputgroupbutton: reactstrap.InputGroupButton, inputgroupbuttondropdown: reactstrap.InputGroupButtonDropdown, inputgrouptext: reactstrap.InputGroupText, jumbotron: reactstrap.Jumbotron, label: reactstrap.Label, listgroup: reactstrap.ListGroup, listgroupitem: reactstrap.ListGroupItem, listgroupitemheading: reactstrap.ListGroupItemHeading, listgroupitemtext: reactstrap.ListGroupItemText, media: reactstrap.Media, modal: reactstrap.Modal, modalbody: reactstrap.ModalBody, modalfooter: reactstrap.ModalFooter, modalheader: reactstrap.ModalHeader, nav: reactstrap.Nav, navbar: reactstrap.Navbar, navbarbrand: reactstrap.NavbarBrand, navbartoggler: reactstrap.NavbarToggler, navdropdown: reactstrap.NavDropdown, navitem: reactstrap.NavItem, navlink: reactstrap.NavLink, pagination: reactstrap.Pagination, paginationitem: reactstrap.PaginationItem, paginationlink: reactstrap.PaginationLink, popover: reactstrap.Popover, popoverbody: reactstrap.PopoverBody, popovercontent: reactstrap.PopoverContent, popoverheader: reactstrap.PopoverHeader, popovertitle: reactstrap.PopoverTitle, poppercontent: reactstrap.PopperContent, poppertargethelper: reactstrap.PopperTargetHelper, progress: reactstrap.Progress, row: reactstrap.Row, tabcontent: reactstrap.TabContent, table: reactstrap.Table, tabpane: reactstrap.TabPane, tooltip: reactstrap.Tooltip, uncontrolledalert: reactstrap.UncontrolledAlert, uncontrolledbuttondropdown: reactstrap.UncontrolledButtonDropdown, uncontrolledcarousel: reactstrap.UncontrolledCarousel, uncontrolledcollapse: reactstrap.UncontrolledCollapse, uncontrolleddropdown: reactstrap.UncontrolledDropdown, uncontrollednavdropdown: reactstrap.UncontrolledNavDropdown, uncontrolledtooltip: reactstrap.UncontrolledTooltip,\n    },\n  }).Compiler;\n  return (\n    <Layout>\n          <div id=\"mobile-menu-holder\" className=\"d-sm-block d-md-none d-lg-none d-xl-none bg-primary\" style={{padding: '6px'}}>\n            <Button color=\"primary\" id=\"mobile-menu\" className=\"mr-3\">Menu</Button>\n            <Search\n              lng={(i18n.language === \"en\") ? \"en\" : \"fr\"}\n              placeholder={(i18n.language === \"en\") ? \"Search\" : \"Chercher\"}\n            />\n          </div>\n          <UncontrolledCollapse toggler=\"#mobile-menu\">\n            <div className=\"mobile-sidebar\">\n              <Sidenav path={path} />\n            </div>\n          </UncontrolledCollapse>\n          <div className=\"d-none d-md-block\">\n            <Sidenav path={path} />\n          </div>\n          <Container className=\"mt-2 doc-container\">\n            <main id=\"main-content\" role=\"main\">\n            {(i18n.language === \"en\" || fr === null) ?\n              <div className=\"col-sm\">{renderAst(eng.htmlAst)}</div> :\n              <div className=\"col-sm\">{renderAst(fr.htmlAst)}</div>\n            }\n            </main>\n          </Container>\n    </Layout>\n  );\n}\n\nexport default translate(\"default\")(Template);\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    eng:markdownRemark(frontmatter: { path: { eq: $path }, lang: {eq: \"en\"} }) {\n      html\n      htmlAst\n      frontmatter {\n        path\n        lang\n      }\n    }\n    fr:markdownRemark(frontmatter: { path: { eq: $path }, lang: {eq: \"fr\"} }) {\n      html\n      htmlAst\n      frontmatter {\n        path\n        lang\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
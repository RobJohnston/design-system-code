{"version":3,"sources":["webpack:///./src/components/subnav.js","webpack:///./src/components/sidenav.js","webpack:///./src/components/CodeBlock.js","webpack:///./src/components/ToggleCodeBlock.js","webpack:///./src/components/PaginationLinkPrev.js","webpack:///./src/components/ButtonDropdownWrapper.js","webpack:///./src/components/ButtonDropdownWrapperOpen.js","webpack:///./src/components/StrippedTable.js","webpack:///./src/templates/mdTemplate.js"],"names":["subnav_Subnav","Subnav","props","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","dropdownOpen","setState","prevState","render","_this$props","files","nameEn","nameFr","path","i18n","sortedFiles","sort","a","b","parseInt","node","frontmatter","subnav","split","react_default","createElement","reactstrap_es","X","className","href","aria-expanded","onClick","style","border","font-size","font-family","margin-top","margin-bottom","font-weight","language","index_es","fontSize","icon","free_solid_svg_icons_index_es","C","isOpen","W","map","edges","lang","active","padding-left","gatsby_browser_entry","to","activeStyle","color","backgroundColor","title","Component","components_subnav","Object","es","components_sidenav","query","data","subNameEn","subNameFr","subGroup","subPieces","forEach","push","length","id","role","aria-label","fb","_1251706298","CodeBlock_CodeBlock","CodeBlock","output","defaultOutput","isShowingCode","copyText","changeOutput","copy","n","value","_this2","D","xb","display","B","md","tabs","hb","ib","width","react_copy_to_clipboard_lib","CopyToClipboard","text","html","react","e","position","right","top","size","outline","t","padding-top","lib","PrismCode","propTypes","prop_types_default","string","bool","defaultProps","components_CodeBlock","ToggleCodeBlock_ToggleCodeBlock","ToggleCodeBlock","_CodeBlock","returnButton","height","padding","textAlign","fontWeight","marginRight","V","components_ToggleCodeBlock","children","cssModule","object","next","previous","tag","oneOfType","func","PaginationLinkPrev_PaginationLinkPrev","Tag","attributes","objectWithoutProperties_default","classes","utils","classnames_default","ariaLabel","Array","isArray","aria-hidden","key","assign","components_PaginationLinkPrev","ButtonDropdownWrapper_ButtonDropdownWrapper","ButtonDropdownWrapper","f","direction","marginBottom","I","caret","H","G","components_ButtonDropdownWrapper","ButtonDropdownWrapperOpen_ButtonDropdownWrapperOpen","ButtonDropdownWrapperOpen","components_ButtonDropdownWrapperOpen","StrippedTable_StrippedTable","Ab","striped","scope","components_StrippedTable","__webpack_exports__","default","_ref","eng","fr","renderAst","rehype_react_default","components","strippedtable","buttondropdownopen","helmet","Helmet_default","paginationlinkprev","togglecodeblock","codeblock","mdbuttondropdown","alert","badge","breadcrumb","c","breadcrumbitem","d","button","buttondropdown","buttongroup","g","buttontoolbar","h","card","i","cardblock","j","cardbody","k","cardcolumns","l","carddeck","m","cardfooter","cardgroup","o","cardheader","p","cardimg","q","cardimgoverlay","r","cardlink","s","cardsubtitle","cardtext","u","cardtitle","v","carousel","w","carouselcaption","x","carouselcontrol","y","carouselindicators","z","carouselitem","A","mdcol","collapse","container","custominput","E","dropdown","F","dropdownitem","dropdownmenu","dropdowntoggle","fade","J","form","K","formfeedback","L","formgroup","M","formtext","N","input","O","inputgroup","P","inputgroupaddon","Q","inputgroupbutton","R","inputgroupbuttondropdown","S","inputgrouptext","T","jumbotron","U","label","listgroup","listgroupitem","listgroupitemheading","Y","listgroupitemtext","Z","media","ab","modal","bb","modalbody","cb","modalfooter","db","modalheader","eb","nav","navbar","jb","navbarbrand","kb","navbartoggler","lb","navdropdown","gb","navitem","navlink","pagination","mb","paginationitem","nb","paginationlink","ob","popover","pb","popoverbody","qb","popovercontent","rb","popoverheader","sb","popovertitle","tb","poppercontent","ub","poppertargethelper","vb","progress","wb","row","tabcontent","yb","table","tabpane","zb","tooltip","Bb","uncontrolledalert","Cb","uncontrolledbuttondropdown","Db","uncontrolledcarousel","Eb","uncontrolledcollapse","Fb","uncontrolleddropdown","Gb","uncontrollednavdropdown","Hb","uncontrolledtooltip","Ib","Compiler","layout","zIndex","search","lng","placeholder","toggler","htmlAst","pageQuery"],"mappings":"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","file":"component---src-templates-md-template-js-62f4e451e0407122d47d.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport {\r\n\tCollapse,\r\n\tListGroup,\r\n\tListGroupItem\r\n} from 'reactstrap';\r\nimport { translate } from \"react-i18next\";\r\nimport './subnav.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Subnav extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.toggle = this.toggle.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tdropdownOpen: true\r\n\t\t};\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tdropdownOpen: !prevState.dropdownOpen\r\n\t\t}));\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tfiles,\r\n\t\t\tnameEn,\r\n\t\t\tnameFr,\r\n\t\t\tpath,\r\n\t\t\ti18n, } = this.props;\r\n\r\n\t\tconst sortedFiles = files.sort((a, b) =>\r\n\t\t\tparseInt(a.node.frontmatter.subnav.split('/')[3], 10) - parseInt(b.node.frontmatter.subnav.split('/')[3], 10))\r\n\t\t\t;\r\n\t\treturn (\r\n\t\t\t<ListGroupItem className=\"collapseItem\">\r\n\t\t\t\t<a href=\"#\" aria-expanded={this.state.dropdownOpen} onClick={this.toggle} style={{\"border\": \"0px\", \"font-size\":\"1.2125em\", \"font-family\": \"'Nunito Sans', sans-serif\", \"margin-top\": \"5px\", \"margin-bottom\": \"5px\", \"font-weight\": \"600\"}}>{(i18n.language === \"en\") ? nameEn : nameFr}<FontAwesomeIcon className=\"ml-1\" style={{\"fontSize\":\"0.7em\"}} icon={faChevronDown} /></a>\r\n\t\t\t\t<Collapse isOpen={this.state.dropdownOpen}>\r\n\t\t\t\t\t<ListGroup>\r\n\t\t\t\t\t\t{sortedFiles.map((edges) => {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t((i18n.language === \"en\") && (edges.node.frontmatter.lang === \"en\")) ||\r\n\t\t\t\t\t\t\t\t((i18n.language === \"fr\") && (edges.node.frontmatter.lang === \"fr\"))\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<ListGroupItem className=\"subItem\" active={path === edges.node.frontmatter.path} style={{ \"padding-left\": \"2rem\",  \"border\": \"0px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"subLink\"\r\n\t\t\t\t\t\t\t\t\t\t\tto={edges.node.frontmatter.path}\r\n\t\t\t\t\t\t\t\t\t\t\tactiveStyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#467B8D\"\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{edges.node.frontmatter.title}\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</ListGroupItem>\r\n\t\t);\r\n\t}\r\n}\r\nexport default translate(\"default\")(Subnav);\r\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport {\r\n  Nav,\r\n} from 'reactstrap';\r\nimport Subnav from './subnav';\r\nimport { translate } from \"react-i18next\";\r\nimport \"./sidenav.scss\"\r\n\r\nconst Sidenav = (props) => (\r\n  <StaticQuery query={graphql`\r\n        query{\r\n          component:allMarkdownRemark(\r\n            filter: {\r\n              frontmatter: {path: {regex: \"/\\/component\\//\"}}\r\n            },\r\n            sort:{\r\n              fields:[frontmatter___subnav]\r\n            }\r\n          ){\r\n            totalCount\r\n              edges{\r\n                node {\r\n                  frontmatter {\r\n                    title\r\n                    path\r\n                    lang\r\n                    subnav\r\n                  }\r\n                }\r\n            }\r\n          }\r\n          overview:allMarkdownRemark(\r\n            filter:\r\n              {frontmatter: {path: {regex: \"/\\/overview\\//\"}}\r\n            },\r\n            sort:{\r\n              fields:[frontmatter___subnav]\r\n            }\r\n          ){\r\n            totalCount\r\n              edges{\r\n                node {\r\n                  frontmatter {\r\n                    title\r\n                    path\r\n                    lang\r\n                    subnav\r\n                  }\r\n                }\r\n            }\r\n          }\r\n          content:allMarkdownRemark(\r\n            filter:\r\n            {frontmatter: {path: {regex: \"/\\/content\\//\"}}\r\n            },\r\n            sort:{\r\n              fields:[frontmatter___subnav]\r\n            }\r\n          ) {\r\n            totalCount\r\n              edges{\r\n                node {\r\n                  frontmatter {\r\n                    title\r\n                    path\r\n                    lang\r\n                    subnav\r\n                  }\r\n                }\r\n            }\r\n          }\r\n          identity:allMarkdownRemark(\r\n            filter: {\r\n              frontmatter: {path: {regex: \"/\\/identity\\//\"}}\r\n            },\r\n            sort:{\r\n              fields:[frontmatter___subnav]\r\n            }\r\n          ) {\r\n            totalCount\r\n              edges{\r\n                node {\r\n                  frontmatter {\r\n                    title\r\n                    path\r\n                    lang\r\n                    subnav\r\n                  }\r\n                }\r\n            }\r\n          }\r\n          data:allMarkdownRemark(\r\n            filter: {\r\n              frontmatter: {path: {regex: \"/\\/data\\//\"}}\r\n            },\r\n            sort:{\r\n              fields:[frontmatter___subnav]\r\n            }\r\n          ){\r\n            totalCount\r\n              edges{\r\n                node {\r\n                  frontmatter {\r\n                    title\r\n                    path\r\n                    lang\r\n                    subnav\r\n                  }\r\n                }\r\n            }\r\n          }\r\n        }\r\n    `}\r\n    render={(data) => {\r\n\r\n      let subNameEn = \"\";\r\n      let subNameFr = \"\";\r\n      let subGroup = [];\r\n      let subPieces = [];\r\n      data[props.path.split(\"/\")[1]].edges.forEach((edges) => {\r\n        if (edges.node.frontmatter.subnav.split(\"/\")[1] !== subNameEn) {\r\n          if (subNameEn !== \"\") {\r\n            subPieces.push(\r\n              <Subnav\r\n                files={subGroup}\r\n                nameEn={subNameEn}\r\n                nameFr={subNameFr}\r\n                path={props.path}\r\n              />\r\n            );\r\n          }\r\n          subGroup = [];\r\n          subNameEn = edges.node.frontmatter.subnav.split(\"/\")[1];\r\n          subNameFr = edges.node.frontmatter.subnav.split(\"/\")[2];\r\n        }\r\n        subGroup.push(edges);\r\n      });\r\n      if (subGroup.push.length !== 0) {\r\n        subPieces.push(\r\n          <Subnav\r\n            files={subGroup}\r\n            nameEn={subNameEn}\r\n            nameFr={subNameFr}\r\n            path={props.path}\r\n          />\r\n        );\r\n      }\r\n      return (\r\n        <nav id=\"sidenav\" role=\"navigation\" aria-label=\"Sub Navigation *Translate*\">\r\n          <Nav style={{'margin-top':'110px', 'margin-bottom':'40px'}}>\r\n            {subPieces}\r\n          </Nav>\r\n        </nav>\r\n      )\r\n    }}\r\n  />\r\n);\r\n\r\nexport default translate(\"default\")(Sidenav);\r\n","import React from 'react';\r\nimport { Button, ButtonGroup, Row, Col, Container, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport 'prismjs';\r\nimport 'prismjs/components/prism-jsx';\r\nimport 'prismjs/themes/prism.css';\r\nimport { PrismCode } from 'react-prism';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport PropTypes from 'prop-types';\r\nimport { translate } from \"react-i18next\";\r\n\r\n/** Component that holds code in html and react/jsx with the ability to copy the code */\r\nclass CodeBlock extends React.Component {\r\n  /**\r\n   * Take the inputs as well as initialize the needed state.\r\n   * @param {props} { defaultOutput, html, react, isShowingCode } - The props not counting the i18n props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      output: (this.props.defaultOutput === undefined || this.props.defaultOutput === \"react\") ? \"react\" : \"html\",\r\n      isShowingCode: this.props.isShowingCode,\r\n      copyText: \"COPY CODE\"\r\n    }\r\n\r\n    this.changeOutput = this.changeOutput.bind(this);\r\n    this.copy = this.copy.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Change the value of the copy button once clicked via this.state.copyText.\r\n   */\r\n  copy() {\r\n    this.setState({ copyText: \"Copied!\" });\r\n  }\r\n\r\n  /**\r\n   * Change the output of the code box between the supplied values for html and react.\r\n   * @param {string} value - \"html\" or \"react\"\r\n   */\r\n  changeOutput(value) {\r\n    if (this.state.output !== value) {\r\n      this.setState({ output: value });\r\n      if (this.state.copyText === \"Copied!\") {\r\n        this.setState({ copyText: \"COPY CODE\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render the codeblock as a bootstrap row (please let Addison know if this is not ideal).\r\n   * @return {<jsx>} The component.\r\n   */\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"codeblock\" style={(this.props.isShowingCode) ? { \"display\": \"flex\" } : { \"display\": \"none\" }}>\r\n          <Col md=\"12\">\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                href=\"#\"\r\n                onClick={() => this.changeOutput(\"react\")}\r\n                className={(!(this.state.output === \"react\")) ? \"\" : \"active\"}>\r\n                  React\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                href=\"#\"\r\n                onClick={() => this.changeOutput(\"html\")}\r\n                className={(!(this.state.output === \"html\")) ? \"\" : \"active\"}>\r\n                  HTML\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Col>\r\n\r\n          <Col md=\"12\" style={{ \"width\": \"100%\" }}>\r\n            <CopyToClipboard text={(this.state.output === \"html\") ? this.props.html : this.props.react}>\r\n              <Button style={{'position':'absolute', 'right':'20px', 'top':'12px'}} color=\"primary\" size=\"sm\" outline onClick={this.copy} className=\"float-right\">\r\n                {this.props.t(this.state.copyText)}\r\n              </Button>\r\n            </CopyToClipboard>\r\n            <pre style={{'padding-top':'40px'}}>\r\n              <PrismCode className={(this.state.output === \"html\") ? \"language-html\" : \"language-jsx\"}>\r\n                {(this.state.output === \"html\") ? this.props.html : this.props.react}\r\n              </PrismCode>\r\n            </pre>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nCodeBlock.propTypes = {\r\n  defaultOutput: PropTypes.string,\r\n  html: PropTypes.string,\r\n  react: PropTypes.string,\r\n  isShowingCode: PropTypes.bool\r\n};\r\n\r\nCodeBlock.defaultProps = {\r\n  defaultOutput: \"html\",\r\n  isShowingCode: true\r\n}\r\n\r\n\r\nexport default translate(\"CodeBlock\")(CodeBlock);\r\n","import React from 'react';\r\nimport { Button, Row, Label, Container } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { translate } from \"react-i18next\";\r\nimport CodeBlock from './CodeBlock';\r\n\r\n/** Component that extends the functionality of CodeBlock by adding the option to hide/show the CodeBlock component */\r\nclass ToggleCodeBlock extends CodeBlock {\r\n    /**\r\n     * Take the inputs as well as initialize the needed state.\r\n     * @param {props} { defaultOutput, html, react, isShowingCode } - The props not counting the i18n props\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            isShowingCode: false\r\n        }\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.returnButton = this.returnButton.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Toggle between showing the CodeBlock element and not showing the CodeBlock element\r\n     */\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            isShowingCode: !prevState.isShowingCode\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Generates the SHOW CODE / HIDE CODE button in order to not cluter the render() code.\r\n     * @return {<jsx>} The show/hide button and its label\r\n     */\r\n    returnButton() {\r\n        return(\r\n            <div>\r\n                <Button \r\n                    onClick={ this.toggle } \r\n                    style={ \r\n                        {\r\n                            \"width\": \"30px\",\r\n                            \"height\": \"30px\",\r\n                            \"padding\": \"0px 0px 5px 0px\",\r\n                            \"textAlign\": \"center\",\r\n                            \"fontSize\": \"20px\",\r\n                            \"fontWeight\": \"900\",\r\n                            \"marginRight\": \"15px\"\r\n                        } \r\n                    } \r\n                    size=\"sm\"\r\n                    color=\"info\">\r\n                    { (this.state.isShowingCode) ? \"-\" : \"+\" }\r\n                </Button>\r\n                <Label onClick={ this.toggle } >\r\n                    { this.props.t((this.state.isShowingCode) ? \"HIDE CODE\" : \"SHOW CODE\") }\r\n                </Label>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Renders the CodeBlock as well as the SHOW CODE / HIDE CODE button in the correct location.\r\n     * @return {<jsx>} A CodeBlock element with an associated show/hide button.\r\n     */\r\n    render() {\r\n        return (\r\n          <Container>\r\n            <Row>\r\n                { (!this.state.isShowingCode) ? this.returnButton() : <div></div> }\r\n                <CodeBlock \r\n                    html={ this.props.html } \r\n                    react={ this.props.react } \r\n                    defaultOutput={ this.props.defaultOutput }\r\n                    isShowingCode={ this.state.isShowingCode }\r\n                />\r\n                { (this.state.isShowingCode) ? this.returnButton() : <div></div> }\r\n            </Row>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\nToggleCodeBlock.propTypes = {\r\n    defaultOutput: PropTypes.string,\r\n    html: PropTypes.string,\r\n    react: PropTypes.string,\r\n    isShowingCode: PropTypes.bool\r\n}\r\n\r\nToggleCodeBlock.defaultProps = {\r\n    defaultOutput: \"html\",\r\n    isShowingCode: false\r\n}\r\n\r\nexport default translate(\"CodeBlock\")(ToggleCodeBlock);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { mapToCssModules } from '../../node_modules/reactstrap/src/utils';\r\n\r\nconst propTypes = {\r\n    'aria-label': PropTypes.string,\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    cssModule: PropTypes.object,\r\n    next: PropTypes.bool,\r\n    previous: PropTypes.bool,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n};\r\n\r\nconst defaultProps = {\r\n    tag: 'a',\r\n};\r\n\r\nconst PaginationLinkPrev = (props) => {\r\n    let {\r\n        className,\r\n        cssModule,\r\n        next,\r\n        previous,\r\n        tag: Tag,\r\n        ...attributes\r\n    } = props;\r\n\r\n    const classes = mapToCssModules(classNames(\r\n        className,\r\n        'page-link'\r\n    ), cssModule);\r\n\r\n    let defaultAriaLabel = 'Previous';\r\n\r\n    const ariaLabel = props['aria-label'] || defaultAriaLabel;\r\n\r\n    let defaultCaret = '\\u00ab';\r\n\r\n    let children = props.children;\r\n    if (children && Array.isArray(children) && children.length === 0) {\r\n        children = null;\r\n    }\r\n\r\n    if (!attributes.href && Tag === 'a') {\r\n        Tag = 'button';\r\n    }\r\n\r\n    children = [\r\n        <span\r\n            aria-hidden=\"true\"\r\n            key=\"caret\"\r\n        >\r\n            {children || defaultCaret}\r\n        </span>,\r\n        <span\r\n            className=\"sr-only\"\r\n            key=\"sr\"\r\n        >\r\n            {ariaLabel}\r\n        </span>,\r\n    ];\r\n\r\n    return (\r\n        <Tag\r\n            {...attributes}\r\n            className={classes}\r\n            aria-label={ariaLabel}\r\n        >\r\n            {children}\r\n        </Tag>\r\n    );\r\n};\r\n\r\nPaginationLinkPrev.propTypes = propTypes;\r\nPaginationLinkPrev.defaultProps = defaultProps;\r\n\r\nexport default PaginationLinkPrev;","import React, { Component } from 'react';\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\r\nimport { translate } from 'react-i18next';\r\n\r\nclass ButtonDropdownWrapper extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.title = \"Dropdown\";\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      dropdownOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ButtonDropdown direction=\"down\" isOpen={this.state.dropdownOpen} toggle={this.toggle} style={{marginBottom: '15px'}} color={this.props.color}>\r\n        <DropdownToggle caret {...this.props}>\r\n          Reply\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem>Action 1</DropdownItem>\r\n          <DropdownItem>Action 2</DropdownItem>\r\n          <DropdownItem>Action 3</DropdownItem>\r\n        </DropdownMenu>\r\n      </ButtonDropdown>\r\n    );\r\n  }\r\n}\r\n\r\nexport default translate('ButtonDropdownWrapper')(ButtonDropdownWrapper);\r\n","import React, { Component } from 'react';\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\r\nimport { translate } from 'react-i18next';\r\n\r\nclass ButtonDropdownWrapperOpen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.title = \"\";\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      dropdownOpen: true\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ButtonDropdown direction=\"down\" isOpen=\"true\" toggle={this.toggle} style={{marginBottom: '15px'}} color={this.props.color}>\r\n        <DropdownToggle caret {...this.props}>\r\n          Pressed\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem>Action 1</DropdownItem>\r\n          <DropdownItem>Action 2</DropdownItem>\r\n          <DropdownItem>Action 3</DropdownItem>\r\n        </DropdownMenu>\r\n      </ButtonDropdown>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default translate('ButtonDropdownWrapperOpen')(ButtonDropdownWrapperOpen);\r\n","import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport { translate } from 'react-i18next';\r\n\r\nclass StrippedTable extends React.Component {\r\n  render() {\r\n    return (\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default translate('StrippedTable')(StrippedTable);\r\n","import React from 'react';\r\nimport rehypeReact from 'rehype-react';\r\nimport * as reactstrap from 'reactstrap';\r\nimport { graphql } from 'gatsby';\r\nimport { Row, Col, Container, UncontrolledCollapse, Button } from 'reactstrap';\r\nimport { translate } from 'react-i18next';\r\n\r\nimport Sidenav from '../components/sidenav';\r\nimport Search from '../components/search';\r\nimport Layout from '../components/layout';\r\nimport ToggleCodeBlock from '../components/ToggleCodeBlock';\r\nimport CodeBlock from '../components/CodeBlock';\r\nimport PaginationLinkPrev from '../components/PaginationLinkPrev';\r\n/* Import wrappers for embedding state-dependent components in markdown */\r\nimport ButtonDropdownWrapper from '../components/ButtonDropdownWrapper';\r\nimport ButtonDropdownWrapperOpen from '../components/ButtonDropdownWrapperOpen';\r\nimport StrippedTable from '../components/StrippedTable';\r\nimport Helmet from 'react-helmet';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Template = ({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n  i18n }) => {\r\n  const { eng, fr } = data;\r\n  const { frontmatter: { path } } = eng;\r\n  const renderAst = new rehypeReact({\r\n    createElement: React.createElement,\r\n    components: {\r\n      strippedtable: StrippedTable, buttondropdownopen: ButtonDropdownWrapperOpen, helmet: Helmet, paginationlinkprev: PaginationLinkPrev, togglecodeblock: ToggleCodeBlock, codeblock: CodeBlock, mdbuttondropdown: ButtonDropdownWrapper, alert: reactstrap.Alert, badge: reactstrap.Badge, breadcrumb: reactstrap.Breadcrumb, breadcrumbitem: reactstrap.BreadcrumbItem, button: reactstrap.Button, buttondropdown: reactstrap.ButtonDropdown, buttongroup: reactstrap.ButtonGroup, buttontoolbar: reactstrap.ButtonToolbar, card: reactstrap.Card, cardblock: reactstrap.CardBlock, cardbody: reactstrap.CardBody, cardcolumns: reactstrap.CardColumns, carddeck: reactstrap.CardDeck, cardfooter: reactstrap.CardFooter, cardgroup: reactstrap.CardGroup, cardheader: reactstrap.CardHeader, cardimg: reactstrap.CardImg, cardimgoverlay: reactstrap.CardImgOverlay, cardlink: reactstrap.CardLink, cardsubtitle: reactstrap.CardSubtitle, cardtext: reactstrap.CardText, cardtitle: reactstrap.CardTitle, carousel: reactstrap.Carousel, carouselcaption: reactstrap.CarouselCaption, carouselcontrol: reactstrap.CarouselControl, carouselindicators: reactstrap.CarouselIndicators, carouselitem: reactstrap.CarouselItem, mdcol: reactstrap.Col, collapse: reactstrap.Collapse, container: reactstrap.Container, custominput: reactstrap.CustomInput, dropdown: reactstrap.Dropdown, dropdownitem: reactstrap.DropdownItem, dropdownmenu: reactstrap.DropdownMenu, dropdowntoggle: reactstrap.DropdownToggle, fade: reactstrap.Fade, form: reactstrap.Form, formfeedback: reactstrap.FormFeedback, formgroup: reactstrap.FormGroup, formtext: reactstrap.FormText, input: reactstrap.Input, inputgroup: reactstrap.InputGroup, inputgroupaddon: reactstrap.InputGroupAddon, inputgroupbutton: reactstrap.InputGroupButton, inputgroupbuttondropdown: reactstrap.InputGroupButtonDropdown, inputgrouptext: reactstrap.InputGroupText, jumbotron: reactstrap.Jumbotron, label: reactstrap.Label, listgroup: reactstrap.ListGroup, listgroupitem: reactstrap.ListGroupItem, listgroupitemheading: reactstrap.ListGroupItemHeading, listgroupitemtext: reactstrap.ListGroupItemText, media: reactstrap.Media, modal: reactstrap.Modal, modalbody: reactstrap.ModalBody, modalfooter: reactstrap.ModalFooter, modalheader: reactstrap.ModalHeader, nav: reactstrap.Nav, navbar: reactstrap.Navbar, navbarbrand: reactstrap.NavbarBrand, navbartoggler: reactstrap.NavbarToggler, navdropdown: reactstrap.NavDropdown, navitem: reactstrap.NavItem, navlink: reactstrap.NavLink, pagination: reactstrap.Pagination, paginationitem: reactstrap.PaginationItem, paginationlink: reactstrap.PaginationLink, popover: reactstrap.Popover, popoverbody: reactstrap.PopoverBody, popovercontent: reactstrap.PopoverContent, popoverheader: reactstrap.PopoverHeader, popovertitle: reactstrap.PopoverTitle, poppercontent: reactstrap.PopperContent, poppertargethelper: reactstrap.PopperTargetHelper, progress: reactstrap.Progress, row: reactstrap.Row, tabcontent: reactstrap.TabContent, table: reactstrap.Table, tabpane: reactstrap.TabPane, tooltip: reactstrap.Tooltip, uncontrolledalert: reactstrap.UncontrolledAlert, uncontrolledbuttondropdown: reactstrap.UncontrolledButtonDropdown, uncontrolledcarousel: reactstrap.UncontrolledCarousel, uncontrolledcollapse: reactstrap.UncontrolledCollapse, uncontrolleddropdown: reactstrap.UncontrolledDropdown, uncontrollednavdropdown: reactstrap.UncontrolledNavDropdown, uncontrolledtooltip: reactstrap.UncontrolledTooltip,\r\n    },\r\n  }).Compiler;\r\n  return (\r\n    <Layout>\r\n          <div id=\"mobile-menu-holder\" className=\"d-sm-block d-md-none d-lg-none d-xl-none bg-primary\" style={{padding: '6px', position: 'fixed', zIndex: '9999', top: '100px', width: '100%'}}>\r\n            <Button color=\"primary\" id=\"mobile-menu\" className=\"mr-3 sidenavToggle\"><FontAwesomeIcon size=\"2x\" icon={faBars} /><span className=\"sr-only\">Menu</span></Button>\r\n            <Search\r\n              lng={(i18n.language === \"en\") ? \"en\" : \"fr\"}\r\n              placeholder={(i18n.language === \"en\") ? \"Search\" : \"Chercher\"}\r\n            />\r\n          </div>\r\n          <UncontrolledCollapse toggler=\".sidenavToggle\">\r\n            <div className=\"mobile-sidebar\">\r\n              <Sidenav path={path} />\r\n            </div>\r\n            <div className=\"ui-mask sidenavToggle\"></div>\r\n          </UncontrolledCollapse>\r\n          <div className=\"d-none d-md-block\">\r\n            <Sidenav path={path} />\r\n          </div>\r\n          <Container className=\"mt-4 mb-4 doc-container\">\r\n            <main id=\"main-content\" role=\"main\">\r\n            {(i18n.language === \"en\" || fr === null) ?\r\n              <div className=\"col-sm\">{renderAst(eng.htmlAst)}</div> :\r\n              <div className=\"col-sm\">{renderAst(fr.htmlAst)}</div>\r\n            }\r\n            </main>\r\n          </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default translate(\"default\")(Template);\r\nexport const pageQuery = graphql`\r\n  query BlogPostByPath($path: String!) {\r\n    eng:markdownRemark(frontmatter: { path: { eq: $path }, lang: {eq: \"en\"} }) {\r\n      html\r\n      htmlAst\r\n      frontmatter {\r\n        path\r\n        lang\r\n      }\r\n    }\r\n    fr:markdownRemark(frontmatter: { path: { eq: $path }, lang: {eq: \"fr\"} }) {\r\n      html\r\n      htmlAst\r\n      frontmatter {\r\n        path\r\n        lang\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}